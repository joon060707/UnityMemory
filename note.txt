Unity Note
-: Description
*: Code
->: Procedure


2021/12/29
- Tag: 각 GameObject들의 종류를 구분하는 표식. 코드 내에서 참조하여 해당 오브젝트들만 고를 수 있음.
- (Box, Sphere, ...) Collider: 다른 게임 오브젝트들과의 충돌을 감지.(OnCollision)
  이때 Collider 내의 is Trigger 체크시 트리거(OnTrigger)로서 사용
- Audio Source: 음악 플레이어. AudioClip: 실제 음악 파일
  그러나 Main Camera 내에 있는 Audio Listener가 활성화되어야 실제로 게임 소리가 들림. Audio Listener은 씬에 1개만 존재해야 함.
- 애니메이션: Animator(Controller)와 Animation 2개 생성하여 Animator 내에서 Animation 실행 시기 설정.
  Parameters 내에서 bool과 trigger의 차이: trigger는 발동될 때만 true가 되고 바로 false 처리, bool은 그런 거 없음
- Rigidbody 주요 코드: AddForce(Vector), position, velocity
- Collider는 GameObject과 같은 일반 개체이고, Collision은 충돌 정보임.
- 2D 기준 Sprite Renderer 내 Sorting Layer: 각종 그림들의 정렬 순서 지정



2021/12/28
- 유니티 내의 컴포넌트(Transform, Rigidbody...)는 C# 스크립트에서 클래스로서 사용 가능
- 스크립트는 사실 어떤 GameObject(Plane, Sphere, Cube, Camera...)에도 넣을 수 있음
- 스크립트 내의 public 필드는 유니티 내에서 입력 가능
- Rigidbody: 물리적 특성 부여.
- (C#) struct는 C에서와 같이 참조 형식이 아닌 실제 값 형식으로 저장함. 하지만 C#에서는 클래스처럼 메소드도 포함 가능.
  선언만 해도 생성됨(단, 매개변수 없는 생성자로는 생성 불가)
- MonoBehaviour 클래스 내에는 이 스크립트를 추가한 개체 자기 자신을 가리키는 gameObject 변수가 있음.
- OnCollision, OnTrigger 등의 메소드는 입력하여 사용하기만 하면 됨(on 입력 후 선택하여 엔터 치면 자동 완성)
* Input.GetKey(KeyCode.[ARROW]): 키보드 키 입력
* Input.GetAxis(string): Project Settings - Input Manager 내의 각종 축 이름 중 하나를 선택하여 1 또는 -1로 입력 받음
* gameObject.SetActive([T/F]): 자기 자신 활성화 여부
* (this. 또는 gameObject. 또는 생략)GetComponent<ClassType>(): 자기 자신에 들어 있는 컴포넌트(ClassType 타입) 얻기  
* Time.deltaTime: 시간 변화량, 즉 1프레임당 시간 반환(60fps이면 1/60)
* transform.Translate(Vector): 해당 벡터값만큼 이동
* Instantiate(GameObject obj(, transform.position, transform.rotation)): 특정 게임오브젝트 생성(복제)
* Destroy(GameObject obj, float time): 특정 게임오브젝트 일정 시간 후(또는 즉시) 삭제(obj에 자기 자신 넣으면 자기 자신 삭제)
* (using UnityEngine.SceneManagement;) SceneManager.LoadScene(string scenename): 특정 씬 열기(기존 씬은 삭제)
